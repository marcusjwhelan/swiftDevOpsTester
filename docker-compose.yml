version: "3.7"
services:
  nginx:
    container_name: nginx-react-front-end
    build:
      context: ./client
      dockerfile: Dockerfile-dev
    hostname: client
    command: npm start
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    ports:
      - 3000:3000
    depends_on:
      - api
    networks:
      - vapor-it-backend
    restart: always
  db:
    container_name: postgres11.3-alpine-database
    image: postgres:11.3-alpine
    restart: always
    hostname: db
    networks:
      vapor-it-backend:
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    volumes:
      - $HOME/docker/volumes/vapor_postgres/:/var/lib/postgresql/data

  api:
    container_name: vapor_it_container
    hostname: api
    build:
      context: .
      dockerfile: dev.Dockerfile
    image: api:dev
    networks:
      - vapor-it-backend
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
      POSTGRES_PORT: 5432
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - .:/app
    working_dir: /app
    stdin_open: true
    tty: true
    entrypoint: bash
    restart: always
    depends_on:
      - db
    #command: ["./.setup/docker-entrypoint.sh", "db", "swift", "run"]

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    hostname: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: test
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - target: 80
        published: 4000
        protocol: tcp
        mode: host
    networks:
      - vapor-it-backend
    restart: unless-stopped
    depends_on:
      - db

networks:
  vapor-it-backend:

volumes:
  database_data:
    driver: local
  pgadmin:

